x-default-logging: &default
  {}

x-log-config: &log-config
  <<: *default

services:

  bahmni-config:
    image: 'bahmni/standard-config:${BAHMNI_CONFIG_IMAGE_TAG:?}'
    volumes:
      - '${BAHMNI_CONFIG_VOLUME:?}:/usr/local/bahmni_config'
      - '${BAHMNI_CONFIG_OVERRIDE_VOLUME:-bahmni-config-override}:/usr/local/bahmni_config_override'
    logging: *log-config
    restart: unless-stopped
    networks:
      - ozone
    command: ["sh", "-c", "cp -r /usr/local/bahmni_config_override/initializer_config/* /etc/bahmni_config/masterdata/configuration && cp -r /usr/local/bahmni_config_override/bahmniemr_config/* /etc/bahmni_config/masterdata/openmrs && ./start.sh"]

  openmrs:
    image: bahmni/openmrs:${OPENMRS_IMAGE_TAG:?}
    environment:
      TZ: ${TIMEZONE}
      OMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OMRS_DB_HOSTNAME: ${OPENMRS_DB_HOST:?}
      OMRS_DB_USERNAME: ${OPENMRS_DB_USER:?}
      OMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OMRS_CREATE_TABLES: ${OPENMRS_DB_CREATE_TABLES}
      OMRS_AUTO_UPDATE_DATABASE: ${OPENMRS_DB_AUTO_UPDATE}
      OMRS_MODULE_WEB_ADMIN: ${OPENMRS_MODULE_WEB_ADMIN}
      # OMRS_DEV_DEBUG_PORT: ${OMRS_DEV_DEBUG_PORT}
      OMRS_JAVA_SERVER_OPTS: ${OMRS_JAVA_SERVER_OPTS}
      OMRS_JAVA_MEMORY_OPTS: ${OMRS_JAVA_MEMORY_OPTS}
      SEND_MAIL: ${SEND_MAIL}
      MAIL_TRANSPORT_PROTOCOL: ${MAIL_TRANSPORT_PROTOCOL}
      MAIL_SMTP_HOST: ${MAIL_SMTP_HOST}
      MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE}
      MAIL_SMTP_SSL_ENABLE: ${MAIL_SMTP_SSL_ENABLE}
      MAIL_DEBUG: ${MAIL_DEBUG}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      OMRS_DOCKER_ENV: ${OPENMRS_DOCKER_ENV}
      OMRS_C3P0_MAX_SIZE: ${OMRS_C3P0_MAX_SIZE}
      WEIGHT_CONCEPT_UUID: ${WEIGHT_CONCEPT_UUID}
      HEIGHT_CONCEPT_UUID: ${HEIGHT_CONCEPT_UUID}
      OMRS_DB_EXTRA_ARGS: ${OMRS_DB_EXTRA_ARGS}
      LUCENE_MATCH_TYPE: ${LUCENE_MATCH_TYPE}
      DOCUMENT_MAX_SIZE_MB: ${DOCUMENT_MAX_SIZE_MB}
    #ports:
      # - ${OMRS_DEV_DEBUG_PORT}:${OMRS_DEV_DEBUG_PORT}
    volumes:
      - "${BAHMNI_CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      - "bahmni-lab-results:/home/bahmni/uploaded_results"
      - "bahmni-uploaded-files:/home/bahmni/uploaded-files"
      - "${BAHMNI_OPENMRS_MODULES_PATH:?}/:/openmrs/data/modules/"
      - 'bahmni-patient-images:/home/bahmni/patient_images'
      - 'bahmni-document-images:/home/bahmni/document_images'
      - 'bahmni-clinical-forms:/home/bahmni/clinical_forms'
      - 'configuration_checksums:/openmrs/data/configuration_checksums'
      - 'sms-token:/openmrs/data/sms-token'
    depends_on:
      - mysql
    logging: *log-config
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/openmrs/index.htm" ]
      interval: 10s
      timeout: 5s
      retries: 360
      start_period: 180s
    networks:
      - ozone

  mysql:
    environment:
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME}
      OPENMRS_DB_USER: ${OPENMRS_DB_USER}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD}
    volumes:
      - "${SQL_SCRIPTS_PATH}/mysql/openmrs:/docker-entrypoint-initdb.d/db/openmrs"
    # command: 
    #   - "--sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    logging: *log-config

  bahmni-web:
    image: bahmni/bahmni-web:${BAHMNI_WEB_IMAGE_TAG:?}
    volumes:
      - "${BAHMNI_CONFIG_VOLUME:?}:/usr/local/apache2/htdocs/bahmni_config/:ro"
    #   - "${BAHMNI_APPS_PATH:?}/ui/app/:/usr/local/apache2/htdocs/bahmni"
    #   - "${BAHMNI_APPS_PATH:?}/ui/node_modules/@bower_components/:/usr/local/apache2/htdocs/bahmni/components"
    logging: *log-config
    restart: unless-stopped
    networks:
      - ozone

  implementer-interface:
    image: bahmni/implementer-interface:${IMPLEMENTER_INTERFACE_IMAGE_TAG:?}
    #volumes:
    #  - "${IMPLEMENTER_INTERFACE_CODE_PATH:?}/dist:/usr/local/apache2/htdocs/implementer_interface"
    depends_on:
      - openmrs
    logging: *log-config
    restart: unless-stopped
    networks:
      - ozone

  reports:
    image: bahmni/reports:${REPORTS_IMAGE_TAG:?}
    environment:
      TZ: ${TIMEZONE}
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: root
      OPENMRS_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      REPORTS_DB_SERVER: reportsdb
      REPORTS_DB_NAME: ${REPORTS_DB_NAME:?}
      REPORTS_DB_USERNAME: ${REPORTS_DB_USERNAME:?}
      REPORTS_DB_PASSWORD: ${REPORTS_DB_PASSWORD:?}
      ODOO_DB_SERVER: ${POSTGRES_DB_HOST:?}
      ODOO_DB_NAME: ${ODOO_DATABASE:?}
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
      ICD10_LITE_INDICATOR: ${ICD10_LITE_INDICATOR}
    volumes:
      - "${BAHMNI_CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      - "bahmni-queued-reports:/home/bahmni/reports"
    # - "../snomed-resources/icd10-extensions-1.0.0-SNAPSHOT.jar:/var/run/bahmni-reports/bahmni-reports/WEB-INF/lib/icd10-extensions-1.0.0-SNAPSHOT.jar:ro"
    depends_on:
      - reportsdb
      - mysql
      - bahmni-web
    logging: *log-config
    restart: unless-stopped
    networks:
      - ozone

  reportsdb:
    platform: linux/amd64
    image: ${REPORTS_DB_IMAGE_NAME:?}
    environment:
      TZ: ${TIMEZONE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${REPORTS_DB_NAME:?}
      MYSQL_USER: ${REPORTS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${REPORTS_DB_PASSWORD:?}
    volumes:
      - 'reportsdbdata:/var/lib/mysql'
    logging: *log-config
    restart: unless-stopped
    networks:
      - ozone

  patient-documents:
    image: 'bahmni/patient-documents:${PATIENT_DOCUMENTS_TAG:?}'
    volumes:
      - 'bahmni-document-images:/usr/share/nginx/html/document_images'
      - 'bahmni-lab-results:/usr/share/nginx/html/uploaded_results'
      - "bahmni-uploaded-files:/usr/share/nginx/html/uploaded-files"
    environment:
      TZ: ${TIMEZONE}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
    depends_on:
      - openmrs
    logging: *log-config
    restart: unless-stopped
    networks:
      - ozone

  appointments:
    image: bahmni/appointments:${APPOINTMENTS_IMAGE_TAG:?}
    restart: unless-stopped
    # volumes:
    # - "${APPOINTMENTS_PATH:?}/dist/:/usr/local/apache2/htdocs/appointments"
    networks:
      - ozone

  sms-service:
    image: bahmni/sms-service:${SMS_SERVICE_IMAGE_TAG:?}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      SMS_TOKEN: ${SMS_TOKEN}
      SMS_ORIGINATOR: ${SMS_ORIGINATOR}
      SMS_PROVIDER_API: ${SMS_PROVIDER_API}
      SMS_OPENMRS_HOST: ${OPENMRS_HOST:?}
      SMS_OPENMRS_PORT: ${OPENMRS_PORT:?}
      SMS_COUNTRY_CODE: ${SMS_COUNTRY_CODE}
    volumes:
      - 'sms-token:/opt/tokens'
    networks:
      - ozone

  ipd:
    image: bahmni/microfrontend-ipd:${IPD_TAG:?}
    container_name: ipd
    restart: unless-stopped
    # volumes:
    #   - "${IPD_PATH:?}/dist/federation/:/usr/local/apache2/htdocs/ipd"
    logging: *log-config
    networks:
      - ozone

volumes:
  openmrs-data:
  openmrsdbdata:
  bahmni-config-override: ~
  bahmni-patient-images:
  bahmni-document-images:
  bahmni-clinical-forms:
  bahmni-config:
  bahmni-lab-results:
  bahmni-uploaded-files:
  configuration_checksums:
  sms-token:
  bahmni-queued-reports:
  reportsdbdata:
